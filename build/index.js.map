{"version":3,"sources":["../src/types/length.ts","../src/types/display.ts","../src/types/gap.ts","../src/types/flex-direction.ts","../src/types/flex-wrap.ts","../src/types/justify-content.ts","../src/types/align-content.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { CSSUnit } from \"@/types/unit\";\n\nexport type CssLength = \"0\" | `${number}${CSSUnit}`;\n\nexport function isCssLength(value: any): value is CssLength {\n  if (typeof value !== \"string\") return false;\n\n  // Check if it's \"0\"\n  if (value === \"0\") return true;\n\n  // Check if it matches the pattern ${number}${CSSUnit}\n  const cssUnitRegex =\n    /^[0-9]+(\\.[0-9]+)?(px|em|rem|%|vh|vw|vmin|vmax|ch|ex|cm|mm|in|pt|pc)$/;\n  return cssUnitRegex.test(value);\n}\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/display\n\nexport type CssDisplayPrecomposedValues =\n  | \"block\"\n  | \"inline\"\n  | \"inline-block\"\n  | \"flex\"\n  | \"inline-flex\"\n  | \"grid\"\n  | \"inline-grid\"\n  | \"flow-root\";\n\nexport type CssDisplayBoxGeneration = \"none\" | \"contents\";\n\nexport type CssDisplayMultiKeywordSyntax =\n  | \"block flex\"\n  | \"block flow\"\n  | \"block flow-root\"\n  | \"block grid\"\n  | \"inline flex\"\n  | \"inline flow\"\n  | \"inline flow-root\"\n  | \"inline grid\";\n\nexport type CssDisplayOtherValues = \"table\" | \"table-row\" | \"list-item\";\n\nexport type CssDisplayGlobalValues =\n  | \"inherit\"\n  | \"initial\"\n  | \"revert\"\n  | \"revert-layer\"\n  | \"unset\";\n\nexport type CssDisplay =\n  | CssDisplayPrecomposedValues\n  | CssDisplayBoxGeneration\n  | CssDisplayMultiKeywordSyntax\n  | CssDisplayOtherValues\n  | CssDisplayGlobalValues;\n\nexport function isCssDisplayPrecomposedValues(\n  value: any,\n): value is CssDisplayPrecomposedValues {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    value === \"block\" ||\n    value === \"inline\" ||\n    value === \"inline-block\" ||\n    value === \"flex\" ||\n    value === \"inline-flex\" ||\n    value === \"grid\" ||\n    value === \"inline-grid\" ||\n    value === \"flow-root\"\n  );\n}\n\nexport function isCssDisplayBoxGeneration(\n  value: any,\n): value is CssDisplayBoxGeneration {\n  if (typeof value !== \"string\") return false;\n\n  return value === \"none\" || value === \"contents\";\n}\n\nexport function isCssDisplayMultiKeywordSyntax(\n  value: any,\n): value is CssDisplayMultiKeywordSyntax {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    value === \"block flex\" ||\n    value === \"block flow\" ||\n    value === \"block flow-root\" ||\n    value === \"block grid\" ||\n    value === \"inline flex\" ||\n    value === \"inline flow\" ||\n    value === \"inline flow-root\" ||\n    value === \"inline grid\"\n  );\n}\n\nexport function isCssDisplayOtherValues(\n  value: any,\n): value is CssDisplayOtherValues {\n  if (typeof value !== \"string\") return false;\n\n  return value === \"table\" || value === \"table-row\" || value === \"list-item\";\n}\n\nexport function isCssDisplayGlobalValues(\n  value: any,\n): value is CssDisplayGlobalValues {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    value === \"inherit\" ||\n    value === \"initial\" ||\n    value === \"revert\" ||\n    value === \"revert-layer\" ||\n    value === \"unset\"\n  );\n}\n\nexport function isCssDisplay(value: any): value is CssDisplay {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    isCssDisplayPrecomposedValues(value) ||\n    isCssDisplayBoxGeneration(value) ||\n    isCssDisplayMultiKeywordSyntax(value) ||\n    isCssDisplayOtherValues(value) ||\n    isCssDisplayGlobalValues(value)\n  );\n}\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/gap\nimport { CssLength, isCssLength } from \"@/types/length\";\nimport {\n  CssDisplayPrecomposedValues,\n  isCssDisplayBoxGeneration,\n  isCssDisplayGlobalValues,\n  isCssDisplayMultiKeywordSyntax,\n  isCssDisplayOtherValues,\n  isCssDisplayPrecomposedValues,\n} from \"@/types/display\";\n\ntype CSSGapKeyword =\n  | \"inherit\"\n  | \"initial\"\n  | \"revert\"\n  | \"revert-layer\"\n  | \"unset\";\n\nexport function isCSSGapKeyword(\n  value: any,\n): value is CssDisplayPrecomposedValues {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    value === \"inherit\" ||\n    value === \"initial\" ||\n    value === \"revert\" ||\n    value === \"revert-layer\" ||\n    value === \"unset\"\n  );\n}\n\nexport type Gap = CssLength | CSSGapKeyword;\n\nexport function isCSSGap(value: any): value is Gap {\n  if (typeof value !== \"string\") return false;\n  return isCSSGapKeyword(value) || isCssLength(value);\n}\n","//https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction\nexport type CssFlexDirection =\n  | \"row\"\n  | \"row-reverse\"\n  | \"column\"\n  | \"column-reverse\"\n  | \"inherit\"\n  | \"initial\"\n  | \"revert\"\n  | \"revert-layer\"\n  | \"unset\";\n\nexport function isCssFlexDirection(value: any): value is CssFlexDirection {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    value === \"row\" ||\n    value === \"row-reverse\" ||\n    value === \"column\" ||\n    value === \"column-reverse\" ||\n    value === \"inherit\" ||\n    value === \"initial\" ||\n    value === \"revert\" ||\n    value === \"revert-layer\" ||\n    value === \"unset\"\n  );\n}\n","//https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap\nexport type CssFlexWrap =\n  | \"nowrap\"\n  | \"wrap\"\n  | \"wrap-reverse\"\n  | \"inherit\"\n  | \"initial\"\n  | \"revert\"\n  | \"revert-layer\"\n  | \"unset\";\n\nexport function isCssFlexWrap(value: any): value is CssFlexWrap {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    value === \"nowrap\" ||\n    value === \"wrap\" ||\n    value === \"wrap-reverse\" ||\n    value === \"inherit\" ||\n    value === \"initial\" ||\n    value === \"revert\" ||\n    value === \"revert-layer\" ||\n    value === \"unset\"\n  );\n}\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content\nexport type CssJustifyContent =\n  /* Positional alignment */\n  | \"center\"\n  | \"start\"\n  | \"end\"\n  | \"flex-start\"\n  | \"flex-end\"\n  | \"left\"\n  | \"right\"\n\n  /* Normal alignment */\n  | \"normal\"\n\n  /* Distributed alignment */\n  | \"space-between\"\n  | \"space-around\"\n  | \"space-evenly\"\n  | \"stretch\"\n\n  /* Overflow alignment */\n  | \"safe center\"\n  | \"unsafe center\"\n\n  /* Global values */\n  | \"inherit\"\n  | \"initial\"\n  | \"revert\"\n  | \"revert-layer\"\n  | \"unset\";\n\nexport function isCssJustifyContent(value: any): value is CssJustifyContent {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    /* Positional alignment */\n    value === \"center\" ||\n    value === \"start\" ||\n    value === \"end\" ||\n    value === \"flex-start\" ||\n    value === \"flex-end\" ||\n    value === \"left\" ||\n    value === \"right\" ||\n    /* Normal alignment */\n    value === \"normal\" ||\n    /* Distributed alignment */\n    value === \"space-between\" ||\n    value === \"space-around\" ||\n    value === \"space-evenly\" ||\n    value === \"stretch\" ||\n    /* Overflow alignment */\n    value === \"safe center\" ||\n    value === \"unsafe center\" ||\n    /* Global values */\n    value === \"inherit\" ||\n    value === \"initial\" ||\n    value === \"revert\" ||\n    value === \"revert-layer\" ||\n    value === \"unset\"\n  );\n}\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/align-content\nexport type CssAlignContent =\n  /* Normal alignment */\n  | \"normal\"\n\n  /* Basic positional alignment */\n  | \"start\"\n  | \"center\"\n  | \"end\"\n  | \"flex-start\"\n  | \"flex-end\"\n\n  /* Baseline alignment */\n  | \"baseline\"\n  | \"first baseline\"\n  | \"last baseline\"\n\n  /* Distributed alignment */\n  | \"space-between\"\n  | \"space-around\"\n  | \"space-evenly\"\n  | \"stretch\"\n\n  /* Overflow alignment */\n  | \"safe center\"\n  | \"unsafe center\"\n\n  /* Global values */\n  | \"inherit\"\n  | \"initial\"\n  | \"revert\"\n  | \"revert-layer\"\n  | \"unset\";\n\nexport function isCssAlignContent(value: any): value is CssAlignContent {\n  if (typeof value !== \"string\") return false;\n\n  return (\n    /* Normal alignment */\n    value === \"normal\" ||\n    /* Basic positional alignment */\n    value === \"start\" ||\n    value === \"center\" ||\n    value === \"end\" ||\n    value === \"flex-start\" ||\n    value === \"flex-end\" ||\n    /* Baseline alignment */\n    value === \"baseline\" ||\n    value === \"first baseline\" ||\n    value === \"last baseline\" ||\n    /* Distributed alignment */\n    value === \"space-between\" ||\n    value === \"space-around\" ||\n    value === \"space-evenly\" ||\n    value === \"stretch\" ||\n    /* Overflow alignment */\n    value === \"safe center\" ||\n    value === \"unsafe center\" ||\n    /* Global values */\n    value === \"inherit\" ||\n    value === \"initial\" ||\n    value === \"revert\" ||\n    value === \"revert-layer\" ||\n    value === \"unset\"\n  );\n}\n"]}